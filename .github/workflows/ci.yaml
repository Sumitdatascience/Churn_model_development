name: CI pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Pull DVC data
        run: |
          dvc pull  # Pull the data from remote storage


      - name: Run pipeline
        run: |
          dvc repro


# name: CI pipeline

# on:
#   push:

# jobs:
#   project-testing:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10'

#       - name: Install DVC and other dependencies
#         run: |
#           pip install dvc  # Install DVC
#           pip install -r requirements.txt  # Install other dependencies

#       - name: Pull data with DVC
#         run: dvc pull  # Pull the tracked data from remote storage

#       - name: Run DVC pipeline
#         run: dvc repro  # Reproduce the entire pipeline

#       # Optional: Caching DVC to optimize CI times (uncomment if necessary)
#       # - name: Cache DVC
#       #   uses: actions/cache@v2
#       #   with:
#       #     path: |
#       #       ~/.dvc/cache
#       #     key: ${{ runner.os }}-dvc-${{ hashFiles('dvc.lock') }}
#       #     restore-keys: |
#       #       ${{ runner.os }}-dvc
